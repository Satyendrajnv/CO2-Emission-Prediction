# ðŸ“Œ Step 1: Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score

# ðŸ“Œ Step 2: Load the Dataset
data = pd.read_csv('data.csv')  # Replace with your file path if needed
print("First 5 rows:\n", data.head())

# ðŸ“Œ Step 3: Explore the Data
print("\nData Info:")
print(data.info())
print("\nMissing values:\n", data.isnull().sum())

# ðŸ“Œ Step 4: Select Features and Target
X = data[['Volume', 'Weight']]
y = data['CO2']

# ðŸ“Œ Step 5: Scale the Features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# ðŸ“Œ Step 6: Split Data into Training and Testing Sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# ðŸ“Œ Step 7: Train the Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# ðŸ“Œ Step 8: Evaluate the Model
y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print("\nModel Evaluation:")
print(f"RÂ² Score: {r2:.4f}")
print(f"Mean Squared Error: {mse:.2f}")
print("Intercept:", model.intercept_)
print("Coefficients (Volume, Weight):", model.coef_)

# ðŸ“Œ Step 9: Visualize Predictions vs Actual
plt.figure(figsize=(8, 5))
plt.scatter(y_test, y_pred, color='blue')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')  # Diagonal line
plt.xlabel("Actual COâ‚‚ Emissions")
plt.ylabel("Predicted COâ‚‚ Emissions")
plt.title("Actual vs Predicted COâ‚‚ Emissions")
plt.grid(True)
plt.show()

# ðŸ“Œ Step 10: Make a Prediction
# Example: Engine Volume = 1.3L, Weight = 2300kg
sample = np.array([[1.3, 2300]])
sample_scaled = scaler.transform(sample)
predicted_co2 = model.predict(sample_scaled)
print(f"\nPredicted COâ‚‚ emission for 1.3L & 2300kg car: {predicted_co2[0]:.2f}g")

